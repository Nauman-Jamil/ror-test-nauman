<div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
  <div class="mb-6">
    <h1 class="text-3xl font-bold text-gray-900">Cast Your Vote</h1>
    <p class="mt-2 text-sm text-gray-700">Vote for budget allocations in <%= @budget_phase.name %></p>
  </div>

  <div class="bg-white shadow rounded-lg">
    <div class="px-4 py-5 sm:p-6">
      <%= form_with model: [@budget, @budget_phase, @budget_vote], local: true, class: "space-y-6" do |form| %>
        <% if @budget_vote.errors.any? %>
          <div class="bg-red-50 border border-red-200 rounded-md p-4">
            <div class="flex">
              <div class="flex-shrink-0">
                <svg class="h-5 w-5 text-red-400" viewBox="0 0 20 20" fill="currentColor">
                  <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd" />
                </svg>
              </div>
              <div class="ml-3">
                <h3 class="text-sm font-medium text-red-800">
                  <%= pluralize(@budget_vote.errors.count, "error") %> prohibited this vote from being saved:
                </h3>
                <div class="mt-2 text-sm text-red-700">
                  <ul class="list-disc pl-5 space-y-1">
                    <% @budget_vote.errors.full_messages.each do |message| %>
                      <li><%= message %></li>
                    <% end %>
                  </ul>
                </div>
              </div>
            </div>
          </div>
        <% end %>

        <!-- Voter Information -->
        <div class="bg-blue-50 border border-blue-200 rounded-md p-4">
          <h3 class="text-lg font-medium text-blue-900 mb-2">Voter Information</h3>
          <div class="grid grid-cols-1 gap-4 sm:grid-cols-2">
            <div>
              <%= form.label :voter_name, "Your Name", class: "block text-sm font-medium text-blue-700" %>
              <%= form.text_field :voter_name, class: "mt-1 block w-full border-blue-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm" %>
            </div>
            <div>
              <%= form.label :voter_email, "Your Email", class: "block text-sm font-medium text-blue-700" %>
              <%= form.email_field :voter_email, class: "mt-1 block w-full border-blue-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm" %>
            </div>
          </div>
        </div>

        <!-- Budget Overview -->
        <div class="bg-gray-50 border border-gray-200 rounded-md p-4">
          <h3 class="text-lg font-medium text-gray-900 mb-2">Budget Overview</h3>
          <div class="grid grid-cols-1 gap-4 sm:grid-cols-3">
            <div>
              <span class="text-sm font-medium text-gray-500">Total Budget</span>
              <p class="text-lg font-bold text-gray-900">$<%= number_with_precision(@budget.total_amount, precision: 0) %></p>
            </div>
            <div>
              <span class="text-sm font-medium text-gray-500">Allocated</span>
              <p class="text-lg font-bold text-green-600">$<%= number_with_precision(@budget.allocated_amount, precision: 0) %></p>
            </div>
            <div>
              <span class="text-sm font-medium text-gray-500">Remaining</span>
              <p class="text-lg font-bold text-blue-600">$<%= number_with_precision(@budget.remaining_amount, precision: 0) %></p>
            </div>
          </div>
        </div>

        <!-- Category Allocations -->
        <div>
          <h3 class="text-lg font-medium text-gray-900 mb-4">Allocate Your Vote</h3>
          <p class="text-sm text-gray-600 mb-4">Distribute your vote across budget categories. You can allocate up to $<%= number_with_precision(@budget.remaining_amount, precision: 0) %>.</p>
          
          <div class="space-y-4">
            <% @budget_categories.each do |category| %>
              <% current_allocated = category.budget_allocations.where(budget: @budget).sum(:amount) %>
              <% max_allowed = @budget.total_amount * (category.spending_limit_percentage / 100.0) %>
              <% remaining_for_category = [max_allowed - current_allocated, 0].max %>
              <% utilization_rate = @budget.total_amount > 0 ? (current_allocated / @budget.total_amount * 100).round(2) : 0 %>
              
              <div class="border border-gray-200 rounded-lg p-4 category-card" data-category-id="<%= category.id %>">
                <div class="flex items-center justify-between mb-2">
                  <h4 class="text-lg font-medium text-gray-900"><%= category.name %></h4>
                  <div class="flex items-center space-x-2">
                    <span class="text-sm text-gray-500">
                      Limit: <%= category.spending_limit_percentage %>%
                    </span>
                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium
                      <%= utilization_rate >= category.spending_limit_percentage ? 'bg-red-100 text-red-800' : 
                          utilization_rate >= category.spending_limit_percentage * 0.8 ? 'bg-yellow-100 text-yellow-800' : 'bg-green-100 text-green-800' %>">
                      <%= utilization_rate %>%
                    </span>
                  </div>
                </div>
                <p class="text-sm text-gray-600 mb-3"><%= category.description %></p>
                
                <div class="grid grid-cols-1 gap-4 sm:grid-cols-3">
                  <div>
                    <span class="text-sm font-medium text-gray-500">Current Allocation</span>
                    <p class="text-lg font-bold text-gray-900">$<%= number_with_precision(current_allocated, precision: 0) %></p>
                  </div>
                  <div>
                    <span class="text-sm font-medium text-gray-500">Limit Amount</span>
                    <p class="text-lg font-bold text-orange-600">$<%= number_with_precision(max_allowed, precision: 0) %></p>
                  </div>
                  <div>
                    <span class="text-sm font-medium text-gray-500">Available</span>
                    <p class="text-lg font-bold text-green-600 category-available" data-category-id="<%= category.id %>">
                      $<%= number_with_precision(remaining_for_category, precision: 0) %>
                    </p>
                  </div>
                </div>

                <!-- Progress Bar -->
                <div class="mt-3">
                  <div class="flex justify-between text-sm mb-1">
                    <span class="text-gray-500">Category Usage</span>
                    <span class="font-medium text-gray-900 category-usage" data-category-id="<%= category.id %>">
                      <%= utilization_rate %>%
                    </span>
                  </div>
                  <div class="w-full bg-gray-200 rounded-full h-2">
                    <div class="h-2 rounded-full transition-all duration-300 category-progress" 
                         data-category-id="<%= category.id %>"
                         style="width: <%= [utilization_rate, 100].min %>%"></div>
                  </div>
                </div>

                <!-- Vote Amount Input -->
                <div class="mt-4">
                  <%= form.fields_for :vote_allocations do |allocation_form| %>
                    <% if allocation_form.object.budget_category_id == category.id %>
                      <div class="flex items-center space-x-3">
                        <div class="flex-1">
                          <%= allocation_form.label :amount, "Vote Amount ($)", class: "block text-sm font-medium text-gray-700" %>
                          <%= allocation_form.number_field :amount, 
                              min: 0, 
                              max: remaining_for_category,
                              step: 100,
                              class: "mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm category-input",
                              data: { category_id: category.id, max_available: remaining_for_category },
                              placeholder: "Enter amount" %>
                          <div class="mt-1 text-xs text-red-600 category-error" data-category-id="<%= category.id %>" style="display: none;">
                            Amount exceeds category limit
                          </div>
                        </div>
                        <div class="flex-shrink-0 pt-6">
                          <button type="button" 
                                  class="text-blue-600 hover:text-blue-900 text-sm font-medium category-max-btn"
                                  data-category-id="<%= category.id %>"
                                  data-max-amount="<%= remaining_for_category %>">
                            Max
                          </button>
                        </div>
                      </div>
                      <%= allocation_form.hidden_field :budget_category_id, value: category.id %>
                    <% end %>
                  <% end %>
                </div>
              </div>
            <% end %>
          </div>
        </div>

        <!-- Comments -->
        <div>
          <%= form.label :comments, "Additional Comments (Optional)", class: "block text-sm font-medium text-gray-700" %>
          <%= form.text_area :comments, rows: 3, class: "mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm", placeholder: "Share your thoughts about the budget allocation..." %>
        </div>

        <!-- Vote Summary -->
        <div class="bg-green-50 border border-green-200 rounded-md p-4">
          <h3 class="text-lg font-medium text-green-900 mb-2">Vote Summary</h3>
          <div class="grid grid-cols-1 gap-4 sm:grid-cols-2">
            <div>
              <span class="text-sm font-medium text-green-700">Total Vote Amount</span>
              <p class="text-lg font-bold text-green-900" id="total-vote-amount">$0</p>
            </div>
            <div>
              <span class="text-sm font-medium text-green-700">Remaining Budget</span>
              <p class="text-lg font-bold text-green-900" id="remaining-budget">$<%= number_with_precision(@budget.remaining_amount, precision: 0) %></p>
            </div>
          </div>
          <div class="mt-3 p-3 bg-yellow-50 border border-yellow-200 rounded-md" id="category-limits-warning" style="display: none;">
            <div class="flex">
              <div class="flex-shrink-0">
                <svg class="h-5 w-5 text-yellow-400" viewBox="0 0 20 20" fill="currentColor">
                  <path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd" />
                </svg>
              </div>
              <div class="ml-3">
                <h3 class="text-sm font-medium text-yellow-800">Category Limits Warning</h3>
                <div class="mt-2 text-sm text-yellow-700">
                  <p>Some categories are approaching or exceeding their spending limits. Please review your allocations.</p>
                </div>
              </div>
            </div>
          </div>
        </div>

        <div class="flex justify-end space-x-3">
          <%= link_to "Cancel", budget_budget_phase_path(@budget, @budget_phase), class: "inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500" %>
          <%= form.submit "Submit Vote", class: "inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500" %>
        </div>
      <% end %>
    </div>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const amountInputs = document.querySelectorAll('.category-input');
  const totalVoteAmount = document.getElementById('total-vote-amount');
  const remainingBudget = document.getElementById('remaining-budget');
  const categoryLimitsWarning = document.getElementById('category-limits-warning');
  const maxBudget = <%= @budget.remaining_amount %>;
  
  // Category data for validation
  const categoryData = {};
  <% @budget_categories.each do |category| %>
    <% current_allocated = category.budget_allocations.where(budget: @budget).sum(:amount) %>
    <% max_allowed = @budget.total_amount * (category.spending_limit_percentage / 100.0) %>
    categoryData[<%= category.id %>] = {
      currentAllocated: <%= current_allocated %>,
      maxAllowed: <%= max_allowed %>,
      spendingLimitPercentage: <%= category.spending_limit_percentage %>
    };
  <% end %>

  function updateTotals() {
    let total = 0;
    let hasCategoryLimitWarning = false;
    
    amountInputs.forEach(input => {
      const amount = parseFloat(input.value) || 0;
      total += amount;
      
      // Check category limits
      const categoryId = parseInt(input.dataset.categoryId);
      const category = categoryData[categoryId];
      if (category) {
        const newTotal = category.currentAllocated + amount;
        const utilizationRate = (newTotal / category.maxAllowed * 100);
        
        // Update progress bar and usage percentage
        const progressBar = document.querySelector(`.category-progress[data-category-id="${categoryId}"]`);
        const usageElement = document.querySelector(`.category-usage[data-category-id="${categoryId}"]`);
        const availableElement = document.querySelector(`.category-available[data-category-id="${categoryId}"]`);
        const errorElement = document.querySelector(`.category-error[data-category-id="${categoryId}"]`);
        
        if (progressBar) {
          progressBar.style.width = Math.min(utilizationRate, 100) + '%';
          progressBar.className = 'h-2 rounded-full transition-all duration-300 ' + 
            (utilizationRate >= category.spendingLimitPercentage ? 'bg-red-500' : 
             utilizationRate >= category.spendingLimitPercentage * 0.8 ? 'bg-yellow-500' : 'bg-green-500');
        }
        
        if (usageElement) {
          usageElement.textContent = utilizationRate.toFixed(1) + '%';
        }
        
        if (availableElement) {
          const remaining = Math.max(category.maxAllowed - newTotal, 0);
          availableElement.textContent = '$' + remaining.toLocaleString();
        }
        
        // Show/hide error message
        if (errorElement) {
          if (newTotal > category.maxAllowed) {
            errorElement.style.display = 'block';
            hasCategoryLimitWarning = true;
          } else {
            errorElement.style.display = 'none';
          }
        }
      }
    });
    
    totalVoteAmount.textContent = '$' + total.toLocaleString();
    remainingBudget.textContent = '$' + (maxBudget - total).toLocaleString();
    
    // Update remaining budget color
    if (total > maxBudget) {
      remainingBudget.classList.add('text-red-600');
      remainingBudget.classList.remove('text-green-900');
    } else {
      remainingBudget.classList.remove('text-red-600');
      remainingBudget.classList.add('text-green-900');
    }
    
    // Show/hide category limits warning
    if (hasCategoryLimitWarning) {
      categoryLimitsWarning.style.display = 'block';
    } else {
      categoryLimitsWarning.style.display = 'none';
    }
  }

  // Add event listeners for amount inputs
  amountInputs.forEach(input => {
    input.addEventListener('input', updateTotals);
  });

  // Add event listeners for max buttons
  document.querySelectorAll('.category-max-btn').forEach(btn => {
    btn.addEventListener('click', function() {
      const categoryId = parseInt(this.dataset.categoryId);
      const maxAmount = parseFloat(this.dataset.maxAmount);
      const input = document.querySelector(`.category-input[data-category-id="${categoryId}"]`);
      if (input) {
        input.value = maxAmount;
        updateTotals();
      }
    });
  });

  updateTotals();
});
</script>
